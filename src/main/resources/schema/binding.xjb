<?xml version="1.0" encoding="UTF-8"?>
<!--
This binding file overrides the usage of the namespaces as package names. As the iso-xsd files have 
specific namespace names like namespace="urn:iso:std:iso:ts:29002:-5:ed-1:tech:xml-schema:identifier 
is is not possible to create such package names. You will receive an error when trying to generate that with
xjc. 
Now when generating with maven it works and all files will be put into the package name de.feu.plib.xml

The generated java classes will be created in separate packages per xsd-file, e.g.

query.xsd -> de.feu.plib.xml.query
basic.xsd -> de.feu.plib.xml.basic
...
and so forth 

Via console you normally have to type something like:
xjc -b binding.xjb -d gen-src query.xsd
-->
<jaxb:bindings xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
               xmlns:xsd="http://www.w3.org/2001/XMLSchema"
               xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
               jaxb:version="2.0">
  <jaxb:bindings schemaLocation="query.xsd" node="/xsd:schema">
    <jaxb:schemaBindings>
      <jaxb:package name="de.feu.plib.xml.query" />
    </jaxb:schemaBindings>
  </jaxb:bindings>
  <jaxb:bindings schemaLocation="basic.xsd" node="/xsd:schema">
    <jaxb:schemaBindings>
      <jaxb:package name="de.feu.plib.xml.basic" />
    </jaxb:schemaBindings>
  </jaxb:bindings>
  <jaxb:bindings schemaLocation="catalogue.xsd" node="/xsd:schema">
    <jaxb:schemaBindings>
      <jaxb:package name="de.feu.plib.xml.catalogue" />
    </jaxb:schemaBindings>
  </jaxb:bindings>
  <jaxb:bindings schemaLocation="identifier.xsd" node="/xsd:schema">
    <jaxb:schemaBindings>
      <jaxb:package name="de.feu.plib.xml.identifier" />
    </jaxb:schemaBindings>
  </jaxb:bindings>
  <jaxb:bindings schemaLocation="value.xsd" node="/xsd:schema">
    <jaxb:schemaBindings>
      <jaxb:package name="de.feu.plib.xml.value" />
    </jaxb:schemaBindings>
  </jaxb:bindings> 
  
      <jaxb:globalBindings>
         <!-- let the classes implement serialiseable -->
        <jaxb:serializable uid="1" />
          <!-- let the classes extend own abstract class for providing some extra functionality for each one -->
 <!--       <xjc:superClass name="de.feu.plib.xml.AbstractXMLType" /> -->
     </jaxb:globalBindings>  
     
            
</jaxb:bindings>
